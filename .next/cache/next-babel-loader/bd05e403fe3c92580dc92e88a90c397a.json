{"ast":null,"code":"import axios from \"axios\";\nimport Router from \"next/router\";\naxios.defaults.withCredentials = true;\nexport const getServerSideToken = req => {\n  const {\n    signedCookies = {}\n  } = req;\n\n  if (!signedCookies) {\n    return {};\n  } else if (!signedCookies.token) {\n    return {};\n  }\n\n  return {\n    user: signedCookies.token\n  };\n};\nexport const getClientSideToken = () => {\n  if (false) {\n    const user = window[WINDOW_USER_SCRIPT_VARIABLE] || {};\n    return {\n      user\n    };\n  }\n\n  return {\n    user: {}\n  };\n};\nconst WINDOW_USER_SCRIPT_VARIABLE = \"__USER__\";\nexport const getUserScript = user => {\n  return `${WINDOW_USER_SCRIPT_VARIABLE} = ${JSON.stringify(user)};`;\n};\nexport const authInitialProps = () => ({\n  req,\n  res\n}) => {\n  const auth = req ? getServerSideToken(req) : getClientSideToken();\n  return {\n    auth\n  };\n}; //protected route code in with auth user\n// export const authInitialProps = isProtectedRoute => ({ req, res }) => {\n//     const auth = req ? getServerSideToken(req) : getClientSideToken();\n//     const currentPath = req ? req.url : window.location.pathname;\n//     const user = auth.user;\n//     const isAnonymous = !user || user.type !== \"authenticated\";\n//     if (isProtectedRoute && isAnonymous && currentPath !== \"/login\") {\n//         return redirectUser(res, \"/login\");\n//     }\n//     return { auth };\n// };\n// const redirectUser = (res, path) => {\n//     if (res) {\n//         res.redirect(302, path);\n//         res.finished = true;\n//         return {};\n//     }\n//     Router.replace(path);\n//     return {};\n// };\n\nexport const loginUser = async (email, password) => {\n  const {\n    data\n  } = await axios.post(\"/api/login\", {\n    email,\n    password\n  });\n\n  if (false) {\n    window[WINDOW_USER_SCRIPT_VARIABLE] = data || {};\n  }\n};\nexport const logoutUser = async () => {\n  if (false) {\n    window[WINDOW_USER_SCRIPT_VARIABLE] = {};\n  }\n\n  await axios.post(\"/api/logout\");\n  Router.push(\"/\");\n};\nexport const getUserProfile = async () => {\n  const {\n    data\n  } = await axios.get(\"/api/profile\");\n  return data;\n};","map":{"version":3,"sources":["C:/Users/Concept-React2/IdeaProjects/Complete Working Project/gullah-marketplace/lib/auth.js"],"names":["axios","Router","defaults","withCredentials","getServerSideToken","req","signedCookies","token","user","getClientSideToken","window","WINDOW_USER_SCRIPT_VARIABLE","getUserScript","JSON","stringify","authInitialProps","res","auth","loginUser","email","password","data","post","logoutUser","push","getUserProfile","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEAD,KAAK,CAACE,QAAN,CAAeC,eAAf,GAAiC,IAAjC;AAEA,OAAO,MAAMC,kBAAkB,GAAGC,GAAG,IAAI;AACrC,QAAM;AAAEC,IAAAA,aAAa,GAAG;AAAlB,MAAyBD,GAA/B;;AAEA,MAAI,CAACC,aAAL,EAAoB;AAChB,WAAO,EAAP;AACH,GAFD,MAEO,IAAI,CAACA,aAAa,CAACC,KAAnB,EAA0B;AAC7B,WAAO,EAAP;AACH;;AACD,SAAO;AAAEC,IAAAA,IAAI,EAAEF,aAAa,CAACC;AAAtB,GAAP;AACH,CATM;AAWP,OAAO,MAAME,kBAAkB,GAAG,MAAM;AACpC,aAAmC;AAC/B,UAAMD,IAAI,GAAGE,MAAM,CAACC,2BAAD,CAAN,IAAuC,EAApD;AACA,WAAO;AAAEH,MAAAA;AAAF,KAAP;AACH;;AACD,SAAO;AAAEA,IAAAA,IAAI,EAAE;AAAR,GAAP;AACH,CANM;AAQP,MAAMG,2BAA2B,GAAG,UAApC;AAEA,OAAO,MAAMC,aAAa,GAAGJ,IAAI,IAAI;AACjC,SAAQ,GAAEG,2BAA4B,MAAKE,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAqB,GAAhE;AACH,CAFM;AAIP,OAAO,MAAMO,gBAAgB,GAAG,MAAM,CAAC;AAAEV,EAAAA,GAAF;AAAOW,EAAAA;AAAP,CAAD,KAAkB;AACpD,QAAMC,IAAI,GAAGZ,GAAG,GAAGD,kBAAkB,CAACC,GAAD,CAArB,GAA6BI,kBAAkB,EAA/D;AACA,SAAO;AAAEQ,IAAAA;AAAF,GAAP;AACH,CAHM,C,CAMP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,OAAO,MAAMC,SAAS,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;AAChD,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMrB,KAAK,CAACsB,IAAN,CAAW,YAAX,EAAyB;AAAEH,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAzB,CAAvB;;AACA,aAAmC;AAC/BV,IAAAA,MAAM,CAACC,2BAAD,CAAN,GAAsCU,IAAI,IAAI,EAA9C;AACH;AACJ,CALM;AAOP,OAAO,MAAME,UAAU,GAAG,YAAY;AAClC,aAAmC;AAC/Bb,IAAAA,MAAM,CAACC,2BAAD,CAAN,GAAsC,EAAtC;AACH;;AACD,QAAMX,KAAK,CAACsB,IAAN,CAAW,aAAX,CAAN;AACArB,EAAAA,MAAM,CAACuB,IAAP,CAAY,GAAZ;AACH,CANM;AAQP,OAAO,MAAMC,cAAc,GAAG,YAAY;AACtC,QAAM;AAAEJ,IAAAA;AAAF,MAAW,MAAMrB,KAAK,CAAC0B,GAAN,CAAU,cAAV,CAAvB;AACA,SAAOL,IAAP;AACH,CAHM","sourcesContent":["import axios from \"axios\";\r\nimport Router from \"next/router\";\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nexport const getServerSideToken = req => {\r\n    const { signedCookies = {} } = req;\r\n\r\n    if (!signedCookies) {\r\n        return {};\r\n    } else if (!signedCookies.token) {\r\n        return {};\r\n    }\r\n    return { user: signedCookies.token };\r\n};\r\n\r\nexport const getClientSideToken = () => {\r\n    if (typeof window !== \"undefined\") {\r\n        const user = window[WINDOW_USER_SCRIPT_VARIABLE] || {};\r\n        return { user };\r\n    }\r\n    return { user: {} };\r\n};\r\n\r\nconst WINDOW_USER_SCRIPT_VARIABLE = \"__USER__\";\r\n\r\nexport const getUserScript = user => {\r\n    return `${WINDOW_USER_SCRIPT_VARIABLE} = ${JSON.stringify(user)};`;\r\n};\r\n\r\nexport const authInitialProps = () => ({ req, res }) => {\r\n    const auth = req ? getServerSideToken(req) : getClientSideToken();\r\n    return { auth };\r\n};\r\n\r\n\r\n//protected route code in with auth user\r\n// export const authInitialProps = isProtectedRoute => ({ req, res }) => {\r\n//     const auth = req ? getServerSideToken(req) : getClientSideToken();\r\n//     const currentPath = req ? req.url : window.location.pathname;\r\n//     const user = auth.user;\r\n//     const isAnonymous = !user || user.type !== \"authenticated\";\r\n//     if (isProtectedRoute && isAnonymous && currentPath !== \"/login\") {\r\n//         return redirectUser(res, \"/login\");\r\n//     }\r\n\r\n//     return { auth };\r\n// };\r\n\r\n// const redirectUser = (res, path) => {\r\n//     if (res) {\r\n//         res.redirect(302, path);\r\n//         res.finished = true;\r\n//         return {};\r\n//     }\r\n//     Router.replace(path);\r\n//     return {};\r\n// };\r\n\r\n\r\n\r\nexport const loginUser = async (email, password) => {\r\n    const { data } = await axios.post(\"/api/login\", { email, password });\r\n    if (typeof window !== \"undefined\") {\r\n        window[WINDOW_USER_SCRIPT_VARIABLE] = data || {};\r\n    }\r\n};\r\n\r\nexport const logoutUser = async () => {\r\n    if (typeof window !== \"undefined\") {\r\n        window[WINDOW_USER_SCRIPT_VARIABLE] = {};\r\n    }\r\n    await axios.post(\"/api/logout\");\r\n    Router.push(\"/\");\r\n};\r\n\r\nexport const getUserProfile = async () => {\r\n    const { data } = await axios.get(\"/api/profile\");\r\n    return data;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}